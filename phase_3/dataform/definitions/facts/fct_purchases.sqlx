config {
  type: "table",
  schema: "team_4",
  description: "Purchase order fact table",
  bigquery: {
    partitionBy: "DATE(PARSE_DATE('%Y%m%d', CAST(order_date_key AS STRING)))",
    clusterBy: ["vendor_key", "product_key"]
  },
  dependencies: ["dim_date", "dim_product", "dim_vendor", "dim_employee", "dim_ship_method"],
  tags: ["fact", "purchases"]
}

WITH purchase_orders AS (
  SELECT
    pod.PurchaseOrderID,
    pod.PurchaseOrderDetailID,
    pod.DueDate,
    pod.OrderQty,
    pod.ProductID,
    pod.UnitPrice,
    pod.LineTotal,
    pod.ReceivedQty,
    pod.RejectedQty,
    pod.StockedQty,
    poh.RevisionNumber,
    poh.Status,
    poh.EmployeeID,
    poh.VendorID,
    poh.ShipMethodID,
    poh.OrderDate,
    poh.ShipDate,
    poh.SubTotal,
    poh.TaxAmt,
    poh.Freight,
    poh.TotalDue
  FROM ${ref('Purchasing_PurchaseOrderDetail')} pod
  INNER JOIN ${ref('Purchasing_PurchaseOrderHeader')} poh
    ON pod.PurchaseOrderID = poh.PurchaseOrderID
)

SELECT
  -- Surrogate Key
  ROW_NUMBER() OVER (ORDER BY po.PurchaseOrderID, po.PurchaseOrderDetailID) AS purchase_order_key,
  
  -- Date Keys
  CAST(FORMAT_DATE('%Y%m%d', po.OrderDate) AS INT64) AS order_date_key,
  CAST(FORMAT_DATE('%Y%m%d', po.ShipDate) AS INT64) AS ship_date_key,
  CAST(FORMAT_DATE('%Y%m%d', po.DueDate) AS INT64) AS due_date_key,
  
  -- Dimension Keys (lookup from dimensions)
  COALESCE(dp.product_key, -1) AS product_key,
  COALESCE(dv.vendor_key, -1) AS vendor_key,
  COALESCE(de.employee_key, -1) AS employee_key,
  COALESCE(dsm.ship_method_key, -1) AS ship_method_key,
  
  -- Degenerate Dimensions
  po.PurchaseOrderID AS purchase_order_id,
  po.PurchaseOrderDetailID AS purchase_order_detail_id,
  po.RevisionNumber AS revision_number,
  
  -- Measures
  po.OrderQty AS order_quantity,
  po.UnitPrice AS unit_price,
  po.LineTotal AS line_total,
  CAST(po.ReceivedQty AS NUMERIC(10,2)) AS received_quantity,
  CAST(po.RejectedQty AS NUMERIC(10,2)) AS rejected_quantity,
  CAST(po.StockedQty AS NUMERIC(10,2)) AS stocked_quantity,
  po.SubTotal AS subtotal,
  po.TaxAmt AS tax_amount,
  po.Freight AS freight,
  po.TotalDue AS total_due,
  
  -- Calculated Measures
  CAST(SAFE_DIVIDE(po.RejectedQty, NULLIF(po.OrderQty, 0)) * po.LineTotal AS NUMERIC(19,4)) AS rejected_amount,
  CAST(SAFE_DIVIDE(po.StockedQty, NULLIF(po.ReceivedQty, 0)) * 100 AS NUMERIC(10,2)) AS acceptance_rate_pct,
  CAST(SAFE_DIVIDE(po.ReceivedQty, NULLIF(po.OrderQty, 0)) * 100 AS NUMERIC(10,2)) AS fulfillment_rate_pct,
  
  DATE_DIFF(po.ShipDate, po.OrderDate, DAY) AS days_to_ship,
  DATE_DIFF(po.ShipDate, po.DueDate, DAY) AS days_early_late,
  
  -- Flags
  po.Status AS order_status,
  CASE WHEN po.ReceivedQty >= po.OrderQty THEN TRUE ELSE FALSE END AS is_fully_received,
  CASE WHEN po.RejectedQty > 0 THEN TRUE ELSE FALSE END AS has_rejections,
  CASE WHEN po.ShipDate <= po.DueDate THEN TRUE ELSE FALSE END AS is_on_time,
  
  CASE
    WHEN po.ReceivedQty = 0 THEN 'Not Received'
    WHEN po.ReceivedQty < po.OrderQty THEN 'Partially Received'
    WHEN po.ReceivedQty >= po.OrderQty AND po.RejectedQty = 0 THEN 'Complete - No Issues'
    WHEN po.RejectedQty > 0 THEN 'Complete - With Rejections'
    ELSE 'Unknown'
  END AS order_receipt_status,
  
  -- Audit
  'Adventure_Works' AS source_system,
  CURRENT_TIMESTAMP() AS created_date,
  CURRENT_TIMESTAMP() AS modified_date

FROM purchase_orders po
LEFT JOIN ${ref('dim_product')} dp ON po.ProductID = dp.product_id
LEFT JOIN ${ref('dim_vendor')} dv ON po.VendorID = dv.business_entity_id
LEFT JOIN ${ref('dim_employee')} de ON po.EmployeeID = de.business_entity_id
LEFT JOIN ${ref('dim_ship_method')} dsm ON po.ShipMethodID = dsm.ship_method_id

WHERE po.OrderDate IS NOT NULL
  AND po.VendorID IS NOT NULL
  AND po.ProductID IS NOT NULL

