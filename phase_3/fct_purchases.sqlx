/*
 * FCT_PURCHASES - Purchase Order Fact Table
 * ============================================================================
 * Description: Purchase order transactions for vendor performance analysis
 * Grain: One row per purchase order line item
 * Source Tables: Purchasing_PurchaseOrderHeader, Purchasing_PurchaseOrderDetail
 * Purpose: Track vendor performance, procurement costs, quality metrics
 * ============================================================================
 */

config {
  type: "table",
  schema: "adventure_works",
  name: "fct_purchases",
  description: "Purchase order fact table at line item grain. Tracks vendor performance and purchasing patterns.",
  
  bigquery: {
    partitionBy: "DATE(PARSE_DATE('%Y%m%d', CAST(order_date_key AS STRING)))",
    clusterBy: ["vendor_key", "product_key", "employee_key"]
  },
  
  dependencies: [
    "dim_date",
    "dim_product",
    "dim_vendor",
    "dim_employee",
    "dim_ship_method"
  ],
  
  tags: ["fact", "purchases", "vendor", "procurement", "daily"],
  
  assertions: {
    uniqueKey: ["purchase_order_id", "purchase_order_detail_id"],
    nonNull: ["purchase_order_id", "purchase_order_detail_id", "order_date_key", "vendor_key", "product_key"]
  }
}

-- =============================================================================
-- Purchase Order Fact Query
-- =============================================================================

WITH source_po_detail AS (
  SELECT
    pod.PurchaseOrderID,
    pod.PurchaseOrderDetailID,
    pod.DueDate,
    pod.OrderQty,
    pod.ProductID,
    pod.UnitPrice,
    pod.LineTotal,
    pod.ReceivedQty,
    pod.RejectedQty,
    pod.StockedQty,
    pod.ModifiedDate
  FROM ${ref('Purchasing_PurchaseOrderDetail')} pod
),

source_po_header AS (
  SELECT
    poh.PurchaseOrderID,
    poh.RevisionNumber,
    poh.Status,
    poh.EmployeeID,
    poh.VendorID,
    poh.ShipMethodID,
    poh.OrderDate,
    poh.ShipDate,
    poh.SubTotal,
    poh.TaxAmt,
    poh.Freight,
    poh.TotalDue
  FROM ${ref('Purchasing_PurchaseOrderHeader')} poh
),

-- Join source tables
purchase_base AS (
  SELECT
    pod.PurchaseOrderID,
    pod.PurchaseOrderDetailID,
    pod.DueDate,
    pod.OrderQty,
    pod.ProductID,
    pod.UnitPrice,
    pod.LineTotal,
    pod.ReceivedQty,
    pod.RejectedQty,
    pod.StockedQty,
    poh.RevisionNumber,
    poh.Status,
    poh.EmployeeID,
    poh.VendorID,
    poh.ShipMethodID,
    poh.OrderDate,
    poh.ShipDate,
    poh.SubTotal,
    poh.TaxAmt,
    poh.Freight,
    poh.TotalDue
  FROM source_po_detail pod
  INNER JOIN source_po_header poh
    ON pod.PurchaseOrderID = poh.PurchaseOrderID
)

-- =============================================================================
-- Final Purchase Fact Table with Dimension Lookups
-- =============================================================================

SELECT
  -- Surrogate Key
  ROW_NUMBER() OVER (
    ORDER BY pb.PurchaseOrderID, pb.PurchaseOrderDetailID
  ) AS purchase_order_key,
  
  -- Date Dimension Foreign Keys (Role-Playing Dimension)
  CAST(FORMAT_DATE('%Y%m%d', pb.OrderDate) AS INT64) AS order_date_key,
  CAST(FORMAT_DATE('%Y%m%d', pb.ShipDate) AS INT64) AS ship_date_key,
  CAST(FORMAT_DATE('%Y%m%d', pb.DueDate) AS INT64) AS due_date_key,
  
  -- Dimension Foreign Keys (Surrogate Key Lookups)
  COALESCE(dp.product_key, -1) AS product_key,
  COALESCE(dv.vendor_key, -1) AS vendor_key,
  COALESCE(de.employee_key, -1) AS employee_key,
  COALESCE(dsm.ship_method_key, -1) AS ship_method_key,
  
  -- Degenerate Dimensions
  pb.PurchaseOrderID AS purchase_order_id,
  pb.PurchaseOrderDetailID AS purchase_order_detail_id,
  pb.RevisionNumber AS revision_number,
  
  -- Additive Measures
  pb.OrderQty AS order_quantity,
  pb.UnitPrice AS unit_price,
  pb.LineTotal AS line_total,
  CAST(pb.ReceivedQty AS NUMERIC(10,2)) AS received_quantity,
  CAST(pb.RejectedQty AS NUMERIC(10,2)) AS rejected_quantity,
  CAST(pb.StockedQty AS NUMERIC(10,2)) AS stocked_quantity,
  pb.SubTotal AS subtotal,
  pb.TaxAmt AS tax_amount,
  pb.Freight AS freight,
  pb.TotalDue AS total_due,
  
  -- Calculated Measures - Quality Metrics
  CAST(
    SAFE_DIVIDE(pb.RejectedQty, NULLIF(pb.OrderQty, 0)) * pb.LineTotal 
    AS NUMERIC(19,4)
  ) AS rejected_amount,
  
  CAST(
    SAFE_DIVIDE(pb.StockedQty, NULLIF(pb.ReceivedQty, 0)) * 100 
    AS NUMERIC(10,2)
  ) AS acceptance_rate_pct,
  
  CAST(
    SAFE_DIVIDE(pb.ReceivedQty, NULLIF(pb.OrderQty, 0)) * 100 
    AS NUMERIC(10,2)
  ) AS fulfillment_rate_pct,
  
  -- Delivery Performance
  DATE_DIFF(pb.ShipDate, pb.OrderDate, DAY) AS days_to_ship,
  DATE_DIFF(pb.ShipDate, pb.DueDate, DAY) AS days_early_late,
  
  -- Flags
  pb.Status AS order_status,
  
  CASE 
    WHEN pb.ReceivedQty >= pb.OrderQty THEN TRUE 
    ELSE FALSE 
  END AS is_fully_received,
  
  CASE 
    WHEN pb.RejectedQty > 0 THEN TRUE 
    ELSE FALSE 
  END AS has_rejections,
  
  CASE 
    WHEN pb.ShipDate <= pb.DueDate THEN TRUE 
    ELSE FALSE 
  END AS is_on_time,
  
  CASE
    WHEN pb.ReceivedQty = 0 THEN 'Not Received'
    WHEN pb.ReceivedQty < pb.OrderQty THEN 'Partially Received'
    WHEN pb.ReceivedQty >= pb.OrderQty AND pb.RejectedQty = 0 THEN 'Complete - No Issues'
    WHEN pb.RejectedQty > 0 THEN 'Complete - With Rejections'
    ELSE 'Unknown'
  END AS order_receipt_status,
  
  -- Audit Fields
  'Adventure_Works' AS source_system,
  CURRENT_TIMESTAMP() AS created_date,
  CURRENT_TIMESTAMP() AS modified_date

FROM purchase_base pb

-- Join to Dimension Tables to get Surrogate Keys
LEFT JOIN ${ref('dim_product')} dp
  ON pb.ProductID = dp.product_id
  AND dp.is_current = TRUE

LEFT JOIN ${ref('dim_vendor')} dv
  ON pb.VendorID = dv.business_entity_id
  AND dv.is_current = TRUE

LEFT JOIN ${ref('dim_employee')} de
  ON pb.EmployeeID = de.business_entity_id
  AND de.is_current = TRUE

LEFT JOIN ${ref('dim_ship_method')} dsm
  ON pb.ShipMethodID = dsm.ship_method_id

WHERE pb.OrderDate IS NOT NULL
  AND pb.VendorID IS NOT NULL
  AND pb.ProductID IS NOT NULL

ORDER BY pb.PurchaseOrderID, pb.PurchaseOrderDetailID

