config {
  type: "table",
  schema: "team_4",
  description: "Date dimension for time-based analysis",
  tags: ["dimension", "date"]
}

-- Generate date dimension for range covering Adventure Works data
-- Typically 2011-2014 for Adventure Works sample data

WITH date_spine AS (
  SELECT date_day
  FROM UNNEST(GENERATE_DATE_ARRAY('2011-01-01', '2014-12-31', INTERVAL 1 DAY)) AS date_day
)

SELECT
  -- Primary Key
  CAST(FORMAT_DATE('%Y%m%d', date_day) AS INT64) AS date_key,
  
  -- Date Attributes
  date_day AS full_date,
  EXTRACT(DAYOFWEEK FROM date_day) AS day_of_week,
  EXTRACT(DAY FROM date_day) AS day_of_month,
  EXTRACT(DAYOFYEAR FROM date_day) AS day_of_year,
  FORMAT_DATE('%A', date_day) AS day_name,
  FORMAT_DATE('%a', date_day) AS day_name_short,
  
  -- Week Attributes
  EXTRACT(ISOWEEK FROM date_day) AS week_of_year,
  
  -- Month Attributes
  EXTRACT(MONTH FROM date_day) AS month_number,
  FORMAT_DATE('%B', date_day) AS month_name,
  FORMAT_DATE('%b', date_day) AS month_name_short,
  DATE_TRUNC(date_day, MONTH) AS first_day_of_month,
  LAST_DAY(date_day, MONTH) AS last_day_of_month,
  
  -- Quarter Attributes
  EXTRACT(QUARTER FROM date_day) AS quarter,
  CONCAT('Q', CAST(EXTRACT(QUARTER FROM date_day) AS STRING)) AS quarter_name,
  DATE_TRUNC(date_day, QUARTER) AS first_day_of_quarter,
  LAST_DAY(date_day, QUARTER) AS last_day_of_quarter,
  
  -- Year Attributes
  EXTRACT(YEAR FROM date_day) AS year,
  
  -- Fiscal Year (assuming July 1 start)
  CASE 
    WHEN EXTRACT(MONTH FROM date_day) >= 7 
    THEN EXTRACT(YEAR FROM date_day) + 1 
    ELSE EXTRACT(YEAR FROM date_day) 
  END AS fiscal_year,
  
  CASE 
    WHEN EXTRACT(MONTH FROM date_day) IN (7,8,9) THEN 1
    WHEN EXTRACT(MONTH FROM date_day) IN (10,11,12) THEN 2
    WHEN EXTRACT(MONTH FROM date_day) IN (1,2,3) THEN 3
    ELSE 4
  END AS fiscal_quarter,
  
  -- Flags
  CASE WHEN EXTRACT(DAYOFWEEK FROM date_day) IN (1,7) THEN TRUE ELSE FALSE END AS is_weekend,
  FALSE AS is_holiday,  -- Placeholder
  CAST(NULL AS STRING) AS holiday_name,
  CASE WHEN EXTRACT(DAYOFWEEK FROM date_day) NOT IN (1,7) THEN TRUE ELSE FALSE END AS is_weekday,
  
  -- Audit
  CURRENT_TIMESTAMP() AS created_date,
  CURRENT_TIMESTAMP() AS modified_date

FROM date_spine

