/*
 * FCT_SALES - Sales Fact Table
 * ============================================================================
 * Description: Primary fact table capturing all sales transactions
 * Grain: One row per order line item
 * Source Tables: Sales_SalesOrderHeader, Sales_SalesOrderDetail
 * Dependencies: All sales-related dimensions
 * ============================================================================
 */

config {
  type: "table",
  schema: "adventure_works",
  name: "fct_sales",
  description: "Sales fact table at order line item grain. Contains all sales transactions with measures and dimension foreign keys.",
  
  bigquery: {
    partitionBy: "DATE(PARSE_DATE('%Y%m%d', CAST(order_date_key AS STRING)))",
    clusterBy: ["customer_key", "product_key", "territory_key"]
  },
  
  dependencies: [
    "dim_date",
    "dim_product", 
    "dim_customer",
    "dim_territory",
    "dim_salesperson",
    "dim_ship_method",
    "dim_special_offer",
    "dim_credit_card",
    "dim_currency",
    "dim_store",
    "dim_address"
  ],
  
  tags: ["fact", "sales", "daily"],
  
  assertions: {
    uniqueKey: ["sales_order_id", "sales_order_detail_id"],
    nonNull: ["sales_order_id", "sales_order_detail_id", "order_date_key", "customer_key", "product_key"]
  }
}

-- =============================================================================
-- Main Sales Fact Query
-- =============================================================================

WITH source_order_detail AS (
  SELECT
    sod.SalesOrderID,
    sod.SalesOrderDetailID,
    sod.CarrierTrackingNumber,
    sod.OrderQty,
    sod.ProductID,
    sod.SpecialOfferID,
    sod.UnitPrice,
    sod.UnitPriceDiscount,
    sod.LineTotal,
    sod.ModifiedDate
  FROM ${ref('Sales_SalesOrderDetail')} sod
),

source_order_header AS (
  SELECT
    soh.SalesOrderID,
    soh.RevisionNumber,
    soh.OrderDate,
    soh.DueDate,
    soh.ShipDate,
    soh.Status,
    soh.OnlineOrderFlag,
    soh.SalesOrderNumber,
    soh.PurchaseOrderNumber,
    soh.AccountNumber,
    soh.CustomerID,
    soh.SalesPersonID,
    soh.TerritoryID,
    soh.BillToAddressID,
    soh.ShipToAddressID,
    soh.ShipMethodID,
    soh.CreditCardID,
    soh.CreditCardApprovalCode,
    soh.CurrencyRateID,
    soh.SubTotal,
    soh.TaxAmt,
    soh.Freight,
    soh.TotalDue,
    soh.Comment
  FROM ${ref('Sales_SalesOrderHeader')} soh
  WHERE soh.Status >= 5  -- Only completed orders (5=Shipped, 6=Cancelled but processed)
),

source_product_cost AS (
  SELECT
    ProductID,
    StandardCost,
    ListPrice
  FROM ${ref('Production_Product')} 
),

-- Join source tables
sales_base AS (
  SELECT
    sod.SalesOrderID,
    sod.SalesOrderDetailID,
    sod.CarrierTrackingNumber,
    sod.OrderQty,
    sod.ProductID,
    sod.SpecialOfferID,
    sod.UnitPrice,
    sod.UnitPriceDiscount,
    sod.LineTotal,
    soh.RevisionNumber,
    soh.OrderDate,
    soh.DueDate,
    soh.ShipDate,
    soh.Status,
    soh.OnlineOrderFlag,
    soh.SalesOrderNumber,
    soh.PurchaseOrderNumber,
    soh.CustomerID,
    soh.SalesPersonID,
    soh.TerritoryID,
    soh.BillToAddressID,
    soh.ShipToAddressID,
    soh.ShipMethodID,
    soh.CreditCardID,
    soh.CurrencyRateID,
    soh.SubTotal,
    soh.TaxAmt,
    soh.Freight,
    soh.TotalDue,
    pc.StandardCost as product_standard_cost,
    pc.ListPrice as product_list_price
  FROM source_order_detail sod
  INNER JOIN source_order_header soh 
    ON sod.SalesOrderID = soh.SalesOrderID
  LEFT JOIN source_product_cost pc 
    ON sod.ProductID = pc.ProductID
),

-- Get currency information
currency_info AS (
  SELECT
    cr.CurrencyRateID,
    cr.FromCurrencyCode,
    cr.ToCurrencyCode
  FROM ${ref('Sales_CurrencyRate')} cr
),

-- Get store information through customer
customer_store AS (
  SELECT
    c.CustomerID,
    c.StoreID
  FROM ${ref('Sales_Customer')} c
)

-- =============================================================================
-- Final Fact Table with Dimension Lookups
-- =============================================================================

SELECT
  -- Surrogate Key
  ROW_NUMBER() OVER (ORDER BY sb.SalesOrderID, sb.SalesOrderDetailID) AS sales_order_key,
  
  -- Date Dimension Foreign Keys (Role-Playing Dimension)
  CAST(FORMAT_DATE('%Y%m%d', sb.OrderDate) AS INT64) AS order_date_key,
  CAST(FORMAT_DATE('%Y%m%d', sb.ShipDate) AS INT64) AS ship_date_key,
  CAST(FORMAT_DATE('%Y%m%d', sb.DueDate) AS INT64) AS due_date_key,
  
  -- Dimension Foreign Keys (Surrogate Key Lookups)
  COALESCE(dc.customer_key, -1) AS customer_key,
  COALESCE(dp.product_key, -1) AS product_key,
  COALESCE(dt.territory_key, -1) AS territory_key,
  COALESCE(dsp.salesperson_key, -1) AS salesperson_key,
  COALESCE(dsm.ship_method_key, -1) AS ship_method_key,
  COALESCE(dso.special_offer_key, -1) AS special_offer_key,
  COALESCE(dcc.credit_card_key, -1) AS credit_card_key,
  COALESCE(dcur.currency_key, -1) AS currency_key,
  COALESCE(ds.store_key, -1) AS store_key,
  COALESCE(dba.address_key, -1) AS bill_to_address_key,
  COALESCE(dsa.address_key, -1) AS ship_to_address_key,
  
  -- Degenerate Dimensions (High-cardinality attributes kept in fact table)
  sb.SalesOrderID AS sales_order_id,
  sb.SalesOrderNumber AS sales_order_number,
  sb.SalesOrderDetailID AS sales_order_detail_id,
  sb.PurchaseOrderNumber AS purchase_order_number,
  sb.CarrierTrackingNumber AS carrier_tracking_number,
  sb.RevisionNumber AS revision_number,
  
  -- Additive Measures
  sb.OrderQty AS order_quantity,
  sb.UnitPrice AS unit_price,
  sb.UnitPriceDiscount AS unit_price_discount,
  sb.LineTotal AS line_total,
  sb.SubTotal AS subtotal,
  sb.TaxAmt AS tax_amount,
  sb.Freight AS freight,
  sb.TotalDue AS total_due,
  
  -- Calculated Measures
  (sb.UnitPrice * sb.UnitPriceDiscount * sb.OrderQty) AS discount_amount,
  (sb.LineTotal + (sb.UnitPrice * sb.UnitPriceDiscount * sb.OrderQty)) AS gross_sales,
  (sb.LineTotal - (sb.OrderQty * COALESCE(sb.product_standard_cost, 0))) AS gross_profit,
  SAFE_DIVIDE(
    (sb.LineTotal - (sb.OrderQty * COALESCE(sb.product_standard_cost, 0))),
    NULLIF(sb.LineTotal, 0)
  ) * 100 AS profit_margin_pct,
  
  -- Semi-Additive Measures (Snapshot values)
  COALESCE(sb.product_standard_cost, 0) AS product_standard_cost,
  
  -- Flags
  sb.OnlineOrderFlag AS online_order_flag,
  sb.Status AS order_status,
  
  -- Audit Fields
  'Adventure_Works' AS source_system,
  CURRENT_TIMESTAMP() AS created_date,
  CURRENT_TIMESTAMP() AS modified_date

FROM sales_base sb

-- Join to Dimension Tables to get Surrogate Keys
LEFT JOIN ${ref('dim_customer')} dc
  ON sb.CustomerID = dc.customer_id
  AND dc.is_current = TRUE

LEFT JOIN ${ref('dim_product')} dp
  ON sb.ProductID = dp.product_id
  AND dp.is_current = TRUE
  AND sb.OrderDate BETWEEN dp.effective_start_date 
    AND COALESCE(dp.effective_end_date, DATE('9999-12-31'))

LEFT JOIN ${ref('dim_territory')} dt
  ON sb.TerritoryID = dt.territory_id

LEFT JOIN ${ref('dim_salesperson')} dsp
  ON sb.SalesPersonID = dsp.business_entity_id
  AND dsp.is_current = TRUE

LEFT JOIN ${ref('dim_ship_method')} dsm
  ON sb.ShipMethodID = dsm.ship_method_id

LEFT JOIN ${ref('dim_special_offer')} dso
  ON sb.SpecialOfferID = dso.special_offer_id
  AND dso.is_current = TRUE
  AND sb.OrderDate BETWEEN dso.start_date AND dso.end_date

LEFT JOIN ${ref('dim_credit_card')} dcc
  ON sb.CreditCardID = dcc.credit_card_id

-- Currency lookup through currency rate
LEFT JOIN currency_info ci
  ON sb.CurrencyRateID = ci.CurrencyRateID
LEFT JOIN ${ref('dim_currency')} dcur
  ON COALESCE(ci.ToCurrencyCode, 'USD') = dcur.currency_code

-- Store lookup through customer
LEFT JOIN customer_store cs
  ON sb.CustomerID = cs.CustomerID
LEFT JOIN ${ref('dim_store')} ds
  ON cs.StoreID = ds.business_entity_id
  AND ds.is_current = TRUE

-- Address lookups (Role-Playing Dimension)
LEFT JOIN ${ref('dim_address')} dba
  ON sb.BillToAddressID = dba.address_id

LEFT JOIN ${ref('dim_address')} dsa
  ON sb.ShipToAddressID = dsa.address_id

WHERE sb.OrderDate IS NOT NULL
  AND sb.CustomerID IS NOT NULL
  AND sb.ProductID IS NOT NULL

ORDER BY sb.SalesOrderID, sb.SalesOrderDetailID

